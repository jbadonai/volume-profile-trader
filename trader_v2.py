import sys
import asyncio
import pandas as pd
import numpy as np
import math
import requests
from datetime import datetime, time
import time as t
import logging
from binance import AsyncClient

# Configure logging.
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# Use WindowsSelectorEventLoopPolicy on Windows to avoid socket shutdown errors.
if sys.platform.startswith('win'):
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

# --- Telegram Settings ---
TELEGRAM_BOT_TOKEN = "7670784421:AAEL2j8knz5Klg1kzRx-HAJpCllbzEux28Q"
TELEGRAM_CHAT_ID = "6590880408"
no_data_list =[]



def get_symbol_list():
    print('Getting Symbol list')
    url = "https://api.binance.com/api/v3/exchangeInfo"

    # Fetch the data from Binance
    response = requests.get(url)
    data = response.json()

    # Extract the list of trading symbols
    SYMBOL = [item['symbol'] for item in data['symbols']]

    # Print the list of symbols
    print(SYMBOL)
    return SYMBOL


# --- Default Scanner Settings ---
DEFAULT_INTERVAL = "5m"
# SYMBOLS = get_symbol_list()

SYMBOLS = ['ETHBTC', 'LTCBTC', 'BNBBTC', 'NEOBTC', 'QTUMETH', 'EOSETH', 'SNTETH', 'BNTETH', 'BCCBTC', 'GASBTC', 'BNBETH', 'BTCUSDT', 'ETHUSDT', 'HSRBTC', 'OAXETH', 'DNTETH', 'MCOETH', 'ICNETH', 'MCOBTC', 'WTCBTC', 'WTCETH', 'LRCBTC', 'LRCETH', 'QTUMBTC', 'YOYOBTC', 'OMGBTC', 'OMGETH', 'ZRXBTC', 'ZRXETH', 'STRATBTC', 'STRATETH', 'SNGLSBTC', 'SNGLSETH', 'BQXBTC', 'BQXETH', 'KNCBTC', 'KNCETH', 'FUNBTC', 'FUNETH', 'SNMBTC', 'SNMETH', 'NEOETH', 'IOTABTC', 'IOTAETH', 'LINKBTC', 'LINKETH', 'XVGBTC', 'XVGETH', 'SALTBTC', 'SALTETH', 'MDABTC', 'MDAETH', 'MTLBTC', 'MTLETH', 'SUBBTC', 'SUBETH', 'EOSBTC', 'SNTBTC', 'ETCETH', 'ETCBTC', 'MTHBTC', 'MTHETH', 'ENGBTC', 'ENGETH', 'DNTBTC', 'ZECBTC', 'ZECETH', 'BNTBTC', 'ASTBTC', 'ASTETH', 'DASHBTC', 'DASHETH', 'OAXBTC', 'ICNBTC', 'BTGBTC', 'BTGETH', 'EVXBTC', 'EVXETH', 'REQBTC', 'REQETH', 'VIBBTC', 'VIBETH', 'HSRETH', 'TRXBTC', 'TRXETH', 'POWRBTC', 'POWRETH', 'ARKBTC', 'ARKETH', 'YOYOETH', 'XRPBTC', 'XRPETH', 'MODBTC', 'MODETH', 'ENJBTC', 'ENJETH', 'STORJBTC', 'STORJETH', 'BNBUSDT', 'VENBNB', 'YOYOBNB', 'POWRBNB', 'VENBTC', 'VENETH', 'KMDBTC', 'KMDETH', 'NULSBNB', 'RCNBTC', 'RCNETH', 'RCNBNB', 'NULSBTC', 'NULSETH', 'RDNBTC', 'RDNETH', 'RDNBNB', 'XMRBTC', 'XMRETH', 'DLTBNB', 'WTCBNB', 'DLTBTC', 'DLTETH', 'AMBBTC', 'AMBETH', 'AMBBNB', 'BCCETH', 'BCCUSDT', 'BCCBNB', 'BATBTC', 'BATETH', 'BATBNB', 'BCPTBTC', 'BCPTETH', 'BCPTBNB', 'ARNBTC', 'ARNETH', 'GVTBTC', 'GVTETH', 'CDTBTC', 'CDTETH', 'GXSBTC', 'GXSETH', 'NEOUSDT', 'NEOBNB', 'POEBTC', 'POEETH', 'QSPBTC', 'QSPETH', 'QSPBNB', 'BTSBTC', 'BTSETH', 'BTSBNB', 'XZCBTC', 'XZCETH', 'XZCBNB', 'LSKBTC', 'LSKETH', 'LSKBNB', 'TNTBTC', 'TNTETH', 'FUELBTC', 'FUELETH', 'MANABTC', 'MANAETH', 'BCDBTC', 'BCDETH', 'DGDBTC', 'DGDETH', 'IOTABNB', 'ADXBTC', 'ADXETH', 'ADXBNB', 'ADABTC', 'ADAETH', 'PPTBTC', 'PPTETH', 'CMTBTC', 'CMTETH', 'CMTBNB', 'XLMBTC', 'XLMETH', 'XLMBNB', 'CNDBTC', 'CNDETH', 'CNDBNB', 'LENDBTC', 'LENDETH', 'WABIBTC', 'WABIETH', 'WABIBNB', 'LTCETH', 'LTCUSDT', 'LTCBNB', 'TNBBTC', 'TNBETH', 'WAVESBTC', 'WAVESETH', 'WAVESBNB', 'GTOBTC', 'GTOETH', 'GTOBNB', 'ICXBTC', 'ICXETH', 'ICXBNB', 'OSTBTC', 'OSTETH', 'OSTBNB', 'ELFBTC', 'ELFETH', 'AIONBTC', 'AIONETH', 'AIONBNB', 'NEBLBTC', 'NEBLBNB', 'BRDBTC', 'BRDETH', 'BRDBNB', 'MCOBNB', 'EDOBTC', 'EDOETH', 'WINGSBTC', 'WINGSETH', 'NAVBTC', 'NAVETH', 'NAVBNB', 'LUNBTC', 'LUNETH', 'TRIGBTC', 'TRIGETH', 'TRIGBNB', 'APPCBTC', 'APPCETH', 'APPCBNB', 'VIBEBTC', 'VIBEETH', 'RLCBTC', 'RLCETH', 'RLCBNB', 'INSBTC', 'INSETH', 'PIVXBTC', 'PIVXBNB', 'IOSTBTC', 'IOSTETH', 'CHATBTC', 'CHATETH', 'STEEMBTC', 'STEEMETH', 'STEEMBNB', 'NANOBTC', 'NANOETH', 'NANOBNB', 'VIABTC', 'VIAETH', 'VIABNB', 'BLZBTC', 'BLZETH', 'BLZBNB', 'AEBTC', 'AEETH', 'AEBNB', 'RPXBTC', 'RPXETH', 'RPXBNB', 'NCASHBTC', 'NCASHETH', 'NCASHBNB', 'POABTC', 'POAETH', 'POABNB', 'ZILBTC', 'ZILETH', 'ZILBNB', 'ONTBTC', 'ONTETH', 'ONTBNB', 'STORMBTC', 'STORMETH', 'STORMBNB', 'QTUMBNB', 'QTUMUSDT', 'XEMBTC', 'XEMETH', 'XEMBNB', 'WANBTC', 'WANETH', 'WANBNB', 'WPRBTC', 'WPRETH', 'QLCBTC', 'QLCETH', 'SYSBTC', 'SYSETH', 'SYSBNB', 'QLCBNB', 'GRSBTC', 'GRSETH', 'ADAUSDT', 'ADABNB', 'CLOAKBTC', 'CLOAKETH', 'GNTBTC', 'GNTETH', 'GNTBNB', 'LOOMBTC', 'LOOMETH', 'LOOMBNB', 'XRPUSDT', 'BCNBTC', 'BCNETH', 'BCNBNB', 'REPBTC', 'REPBNB', 'BTCTUSD', 'TUSDBTC', 'ETHTUSD', 'TUSDETH', 'TUSDBNB', 'ZENBTC', 'ZENETH', 'ZENBNB', 'SKYBTC', 'SKYETH', 'SKYBNB', 'EOSUSDT', 'EOSBNB', 'CVCBTC', 'CVCETH', 'CVCBNB', 'THETABTC', 'THETAETH', 'THETABNB', 'XRPBNB', 'TUSDUSDT', 'IOTAUSDT', 'XLMUSDT', 'IOTXBTC', 'IOTXETH', 'QKCBTC', 'QKCETH', 'AGIBTC', 'AGIETH', 'AGIBNB', 'NXSBTC', 'NXSETH', 'NXSBNB', 'ENJBNB', 'DATABTC', 'DATAETH', 'ONTUSDT', 'TRXBNB', 'TRXUSDT', 'ETCUSDT', 'ETCBNB', 'ICXUSDT', 'SCBTC', 'SCETH', 'NPXSBTC', 'NPXSETH', 'VENUSDT', 'KEYBTC', 'KEYETH', 'NASBTC', 'NASETH', 'NASBNB', 'MFTBTC', 'MFTETH', 'MFTBNB', 'DENTBTC', 'DENTETH', 'ARDRBTC', 'ARDRETH', 'ARDRBNB', 'NULSUSDT', 'HOTBTC', 'HOTETH', 'VETBTC', 'VETETH', 'VETUSDT', 'VETBNB', 'DOCKBTC', 'DOCKETH', 'POLYBTC', 'POLYBNB', 'PHXBTC', 'PHXETH', 'PHXBNB', 'HCBTC', 'HCETH', 'GOBTC', 'GOBNB', 'PAXBTC', 'PAXBNB', 'PAXUSDT', 'PAXETH', 'RVNBTC', 'DCRBTC', 'DCRBNB', 'USDCBNB', 'MITHBTC', 'MITHBNB', 'BCHABCBTC', 'BCHSVBTC', 'BCHABCUSDT', 'BCHSVUSDT', 'BNBPAX', 'BTCPAX', 'ETHPAX', 'XRPPAX', 'EOSPAX', 'XLMPAX', 'RENBTC', 'RENBNB', 'BNBTUSD', 'XRPTUSD', 'EOSTUSD', 'XLMTUSD', 'BNBUSDC', 'BTCUSDC', 'ETHUSDC', 'XRPUSDC', 'EOSUSDC', 'XLMUSDC', 'USDCUSDT', 'ADATUSD', 'TRXTUSD', 'NEOTUSD', 'TRXXRP', 'XZCXRP', 'PAXTUSD', 'USDCTUSD', 'USDCPAX', 'LINKUSDT', 'LINKTUSD', 'LINKPAX', 'LINKUSDC', 'WAVESUSDT', 'WAVESTUSD', 'WAVESPAX', 'WAVESUSDC', 'BCHABCTUSD', 'BCHABCPAX', 'BCHABCUSDC', 'BCHSVTUSD', 'BCHSVPAX', 'BCHSVUSDC', 'LTCTUSD', 'LTCPAX', 'LTCUSDC', 'TRXPAX', 'TRXUSDC', 'BTTBTC', 'BTTBNB', 'BTTUSDT', 'BNBUSDS', 'BTCUSDS', 'USDSUSDT', 'USDSPAX', 'USDSTUSD', 'USDSUSDC', 'BTTPAX', 'BTTTUSD', 'BTTUSDC', 'ONGBNB', 'ONGBTC', 'ONGUSDT', 'HOTBNB', 'HOTUSDT', 'ZILUSDT', 'ZRXBNB', 'ZRXUSDT', 'FETBNB', 'FETBTC', 'FETUSDT', 'BATUSDT', 'XMRBNB', 'XMRUSDT', 'ZECBNB', 'ZECUSDT', 'ZECPAX', 'ZECTUSD', 'ZECUSDC', 'IOSTUSDT', 'CELRBNB', 'CELRBTC', 'CELRUSDT', 'ADAPAX', 'ADAUSDC', 'NEOPAX', 'NEOUSDC', 'DASHBNB', 'DASHUSDT', 'NANOUSDT', 'OMGBNB', 'OMGUSDT', 'THETAUSDT', 'ENJUSDT', 'MITHUSDT', 'MATICBNB', 'MATICBTC', 'MATICUSDT', 'ATOMBNB', 'ATOMBTC', 'ATOMUSDT', 'ATOMUSDC', 'ATOMPAX', 'ATOMTUSD', 'ETCUSDC', 'ETCPAX', 'ETCTUSD', 'BATUSDC', 'BATPAX', 'BATTUSD', 'PHBBNB', 'PHBBTC', 'PHBUSDC', 'PHBTUSD', 'PHBPAX', 'TFUELBNB', 'TFUELBTC', 'TFUELUSDT', 'TFUELUSDC', 'TFUELTUSD', 'TFUELPAX', 'ONEBNB', 'ONEBTC', 'ONEUSDT', 'ONETUSD', 'ONEPAX', 'ONEUSDC', 'FTMBNB', 'FTMBTC', 'FTMUSDT', 'FTMTUSD', 'FTMPAX', 'FTMUSDC', 'BTCBBTC', 'BCPTTUSD', 'BCPTPAX', 'BCPTUSDC', 'ALGOBNB', 'ALGOBTC', 'ALGOUSDT', 'ALGOTUSD', 'ALGOPAX', 'ALGOUSDC', 'USDSBUSDT', 'USDSBUSDS', 'GTOUSDT', 'GTOPAX', 'GTOTUSD', 'GTOUSDC', 'ERDBNB', 'ERDBTC', 'ERDUSDT', 'ERDPAX', 'ERDUSDC', 'DOGEBNB', 'DOGEBTC', 'DOGEUSDT', 'DOGEPAX', 'DOGEUSDC', 'DUSKBNB', 'DUSKBTC', 'DUSKUSDT', 'DUSKUSDC', 'DUSKPAX', 'BGBPUSDC', 'ANKRBNB', 'ANKRBTC', 'ANKRUSDT', 'ANKRTUSD', 'ANKRPAX', 'ANKRUSDC', 'ONTPAX', 'ONTUSDC', 'WINBNB', 'WINBTC', 'WINUSDT', 'WINUSDC', 'COSBNB', 'COSBTC', 'COSUSDT', 'TUSDBTUSD', 'NPXSUSDT', 'NPXSUSDC', 'COCOSBNB', 'COCOSBTC', 'COCOSUSDT', 'MTLUSDT', 'TOMOBNB', 'TOMOBTC', 'TOMOUSDT', 'TOMOUSDC', 'PERLBNB', 'PERLBTC', 'PERLUSDC', 'PERLUSDT', 'DENTUSDT', 'MFTUSDT', 'KEYUSDT', 'STORMUSDT', 'DOCKUSDT', 'WANUSDT', 'FUNUSDT', 'CVCUSDT', 'BTTTRX', 'WINTRX', 'CHZBNB', 'CHZBTC', 'CHZUSDT', 'BANDBNB', 'BANDBTC', 'BANDUSDT', 'BNBBUSD', 'BTCBUSD', 'BUSDUSDT', 'BEAMBNB', 'BEAMBTC', 'BEAMUSDT', 'XTZBNB', 'XTZBTC', 'XTZUSDT', 'RENUSDT', 'RVNUSDT', 'HCUSDT', 'HBARBNB', 'HBARBTC', 'HBARUSDT', 'NKNBNB', 'NKNBTC', 'NKNUSDT', 'XRPBUSD', 'ETHBUSD', 'BCHABCBUSD', 'LTCBUSD', 'LINKBUSD', 'ETCBUSD', 'STXBNB', 'STXBTC', 'STXUSDT', 'KAVABNB', 'KAVABTC', 'KAVAUSDT', 'BUSDNGN', 'BNBNGN', 'BTCNGN', 'ARPABNB', 'ARPABTC', 'ARPAUSDT', 'TRXBUSD', 'EOSBUSD', 'IOTXUSDT', 'RLCUSDT', 'MCOUSDT', 'XLMBUSD', 'ADABUSD', 'CTXCBNB', 'CTXCBTC', 'CTXCUSDT', 'BCHBNB', 'BCHBTC', 'BCHUSDT', 'BCHUSDC', 'BCHTUSD', 'BCHPAX', 'BCHBUSD', 'BTCRUB', 'ETHRUB', 'XRPRUB', 'BNBRUB', 'TROYBNB', 'TROYBTC', 'TROYUSDT', 'BUSDRUB', 'QTUMBUSD', 'VETBUSD', 'VITEBNB', 'VITEBTC', 'VITEUSDT', 'FTTBNB', 'FTTBTC', 'FTTUSDT', 'BTCTRY', 'BNBTRY', 'BUSDTRY', 'ETHTRY', 'XRPTRY', 'USDTTRY', 'USDTRUB', 'BTCEUR', 'ETHEUR', 'BNBEUR', 'XRPEUR', 'EURBUSD', 'EURUSDT', 'OGNBNB', 'OGNBTC', 'OGNUSDT', 'DREPBNB', 'DREPBTC', 'DREPUSDT', 'BULLUSDT', 'BULLBUSD', 'BEARUSDT', 'BEARBUSD', 'ETHBULLUSDT', 'ETHBULLBUSD', 'ETHBEARUSDT', 'ETHBEARBUSD', 'TCTBNB', 'TCTBTC', 'TCTUSDT', 'WRXBNB', 'WRXBTC', 'WRXUSDT', 'ICXBUSD', 'BTSUSDT', 'BTSBUSD', 'LSKUSDT', 'BNTUSDT', 'BNTBUSD', 'LTOBNB', 'LTOBTC', 'LTOUSDT', 'ATOMBUSD', 'DASHBUSD', 'NEOBUSD', 'WAVESBUSD', 'XTZBUSD', 'EOSBULLUSDT', 'EOSBULLBUSD', 'EOSBEARUSDT', 'EOSBEARBUSD', 'XRPBULLUSDT', 'XRPBULLBUSD', 'XRPBEARUSDT', 'XRPBEARBUSD', 'BATBUSD', 'ENJBUSD', 'NANOBUSD', 'ONTBUSD', 'RVNBUSD', 'STRATBUSD', 'STRATBNB', 'STRATUSDT', 'AIONBUSD', 'AIONUSDT', 'MBLBNB', 'MBLBTC', 'MBLUSDT', 'COTIBNB', 'COTIBTC', 'COTIUSDT', 'ALGOBUSD', 'BTTBUSD', 'TOMOBUSD', 'XMRBUSD', 'ZECBUSD', 'BNBBULLUSDT', 'BNBBULLBUSD', 'BNBBEARUSDT', 'BNBBEARBUSD', 'STPTBNB', 'STPTBTC', 'STPTUSDT', 'BTCZAR', 'ETHZAR', 'BNBZAR', 'USDTZAR', 'BUSDZAR', 'BTCBKRW', 'ETHBKRW', 'BNBBKRW', 'WTCUSDT', 'DATABUSD', 'DATAUSDT', 'XZCUSDT', 'SOLBNB', 'SOLBTC', 'SOLUSDT', 'SOLBUSD', 'BTCIDRT', 'BNBIDRT', 'USDTIDRT', 'BUSDIDRT', 'CTSIBTC', 'CTSIUSDT', 'CTSIBNB', 'CTSIBUSD', 'HIVEBNB', 'HIVEBTC', 'HIVEUSDT', 'CHRBNB', 'CHRBTC', 'CHRUSDT', 'BTCUPUSDT', 'BTCDOWNUSDT', 'GXSUSDT', 'ARDRUSDT', 'ERDBUSD', 'LENDUSDT', 'HBARBUSD', 'MATICBUSD', 'WRXBUSD', 'ZILBUSD', 'MDTBNB', 'MDTBTC', 'MDTUSDT', 'STMXBTC', 'STMXETH', 'STMXUSDT', 'KNCBUSD', 'KNCUSDT', 'REPBUSD', 'REPUSDT', 'LRCBUSD', 'LRCUSDT', 'IQBNB', 'IQBUSD', 'PNTBTC', 'PNTUSDT', 'BTCGBP', 'ETHGBP', 'XRPGBP', 'BNBGBP', 'GBPBUSD', 'DGBBTC', 'DGBBUSD', 'BTCUAH', 'USDTUAH', 'COMPBTC', 'COMPBNB', 'COMPBUSD', 'COMPUSDT', 'BTCBIDR', 'ETHBIDR', 'BNBBIDR', 'BUSDBIDR', 'USDTBIDR', 'BKRWUSDT', 'BKRWBUSD', 'SCUSDT', 'ZENUSDT', 'SXPBTC', 'SXPBNB', 'SXPBUSD', 'SNXBTC', 'SNXBNB', 'SNXBUSD', 'SNXUSDT', 'ETHUPUSDT', 'ETHDOWNUSDT', 'ADAUPUSDT', 'ADADOWNUSDT', 'LINKUPUSDT', 'LINKDOWNUSDT', 'VTHOBNB', 'VTHOBUSD', 'VTHOUSDT', 'DCRBUSD', 'DGBUSDT', 'GBPUSDT', 'STORJBUSD', 'SXPUSDT', 'IRISBNB', 'IRISBTC', 'IRISBUSD', 'MKRBNB', 'MKRBTC', 'MKRUSDT', 'MKRBUSD', 'DAIBNB', 'DAIBTC', 'DAIUSDT', 'DAIBUSD', 'RUNEBNB', 'RUNEBTC', 'RUNEBUSD', 'MANABUSD', 'DOGEBUSD', 'LENDBUSD', 'ZRXBUSD', 'DCRUSDT', 'STORJUSDT', 'XRPBKRW', 'ADABKRW', 'BTCAUD', 'ETHAUD', 'AUDBUSD', 'FIOBNB', 'FIOBTC', 'FIOBUSD', 'BNBUPUSDT', 'BNBDOWNUSDT', 'XTZUPUSDT', 'XTZDOWNUSDT', 'AVABNB', 'AVABTC', 'AVABUSD', 'USDTBKRW', 'BUSDBKRW', 'IOTABUSD', 'MANAUSDT', 'XRPAUD', 'BNBAUD', 'AUDUSDT', 'BALBNB', 'BALBTC', 'BALBUSD', 'YFIBNB', 'YFIBTC', 'YFIBUSD', 'YFIUSDT', 'BLZBUSD', 'KMDBUSD', 'BALUSDT', 'BLZUSDT', 'IRISUSDT', 'KMDUSDT', 'BTCDAI', 'ETHDAI', 'BNBDAI', 'USDTDAI', 'BUSDDAI', 'JSTBNB', 'JSTBTC', 'JSTBUSD', 'JSTUSDT', 'SRMBNB', 'SRMBTC', 'SRMBUSD', 'SRMUSDT', 'ANTBNB', 'ANTBTC', 'ANTBUSD', 'ANTUSDT', 'CRVBNB', 'CRVBTC', 'CRVBUSD', 'CRVUSDT', 'SANDBNB', 'SANDBTC', 'SANDUSDT', 'SANDBUSD', 'OCEANBNB', 'OCEANBTC', 'OCEANBUSD', 'OCEANUSDT', 'NMRBTC', 'NMRBUSD', 'NMRUSDT', 'DOTBNB', 'DOTBTC', 'DOTBUSD', 'DOTUSDT', 'LUNABNB', 'LUNABTC', 'LUNABUSD', 'LUNAUSDT', 'IDEXBTC', 'IDEXBUSD', 'RSRBNB', 'RSRBTC', 'RSRBUSD', 'RSRUSDT', 'PAXGBNB', 'PAXGBTC', 'PAXGBUSD', 'PAXGUSDT', 'WNXMBNB', 'WNXMBTC', 'WNXMBUSD', 'WNXMUSDT', 'TRBBNB', 'TRBBTC', 'TRBBUSD', 'TRBUSDT', 'ETHNGN', 'DOTBIDR', 'LINKAUD', 'SXPAUD', 'BZRXBNB', 'BZRXBTC', 'BZRXBUSD', 'BZRXUSDT', 'WBTCBTC', 'WBTCETH', 'SUSHIBNB', 'SUSHIBTC', 'SUSHIBUSD', 'SUSHIUSDT', 'YFIIBNB', 'YFIIBTC', 'YFIIBUSD', 'YFIIUSDT', 'KSMBNB', 'KSMBTC', 'KSMBUSD', 'KSMUSDT', 'EGLDBNB', 'EGLDBTC', 'EGLDBUSD', 'EGLDUSDT', 'DIABNB', 'DIABTC', 'DIABUSD', 'DIAUSDT', 'RUNEUSDT', 'FIOUSDT', 'UMABTC', 'UMAUSDT', 'EOSUPUSDT', 'EOSDOWNUSDT', 'TRXUPUSDT', 'TRXDOWNUSDT', 'XRPUPUSDT', 'XRPDOWNUSDT', 'DOTUPUSDT', 'DOTDOWNUSDT', 'SRMBIDR', 'ONEBIDR', 'LINKTRY', 'USDTNGN', 'BELBNB', 'BELBTC', 'BELBUSD', 'BELUSDT', 'WINGBNB', 'WINGBTC', 'SWRVBNB', 'SWRVBUSD', 'WINGBUSD', 'WINGUSDT', 'LTCUPUSDT', 'LTCDOWNUSDT', 'LENDBKRW', 'SXPEUR', 'CREAMBNB', 'CREAMBUSD', 'UNIBNB', 'UNIBTC', 'UNIBUSD', 'UNIUSDT', 'NBSBTC', 'NBSUSDT', 'OXTBTC', 'OXTUSDT', 'SUNBTC', 'SUNUSDT', 'AVAXBNB', 'AVAXBTC', 'AVAXBUSD', 'AVAXUSDT', 'HNTBTC', 'HNTUSDT', 'BAKEBNB', 'BURGERBNB', 'SXPBIDR', 'LINKBKRW', 'FLMBNB', 'FLMBTC', 'FLMBUSD', 'FLMUSDT', 'SCRTBTC', 'SCRTETH', 'CAKEBNB', 'CAKEBUSD', 'SPARTABNB', 'UNIUPUSDT', 'UNIDOWNUSDT', 'ORNBTC', 'ORNUSDT', 'TRXNGN', 'SXPTRY', 'UTKBTC', 'UTKUSDT', 'XVSBNB', 'XVSBTC', 'XVSBUSD', 'XVSUSDT', 'ALPHABNB', 'ALPHABTC', 'ALPHABUSD', 'ALPHAUSDT', 'VIDTBTC', 'VIDTBUSD', 'AAVEBNB', 'BTCBRL', 'USDTBRL', 'AAVEBTC', 'AAVEETH', 'AAVEBUSD', 'AAVEUSDT', 'AAVEBKRW', 'NEARBNB', 'NEARBTC', 'NEARBUSD', 'NEARUSDT', 'SXPUPUSDT', 'SXPDOWNUSDT', 'DOTBKRW', 'SXPGBP', 'FILBNB', 'FILBTC', 'FILBUSD', 'FILUSDT', 'FILUPUSDT', 'FILDOWNUSDT', 'YFIUPUSDT', 'YFIDOWNUSDT', 'INJBNB', 'INJBTC', 'INJBUSD', 'INJUSDT', 'AERGOBTC', 'AERGOBUSD', 'LINKEUR', 'ONEBUSD', 'EASYETH', 'AUDIOBTC', 'AUDIOBUSD', 'AUDIOUSDT', 'CTKBNB', 'CTKBTC', 'CTKBUSD', 'CTKUSDT', 'BCHUPUSDT', 'BCHDOWNUSDT', 'BOTBTC', 'BOTBUSD', 'ETHBRL', 'DOTEUR', 'AKROBTC', 'AKROUSDT', 'KP3RBNB', 'KP3RBUSD', 'AXSBNB', 'AXSBTC', 'AXSBUSD', 'AXSUSDT', 'HARDBNB', 'HARDBTC', 'HARDBUSD', 'HARDUSDT', 'BNBBRL', 'LTCEUR', 'RENBTCBTC', 'RENBTCETH', 'DNTBUSD', 'DNTUSDT', 'SLPETH', 'ADAEUR', 'LTCNGN', 'CVPETH', 'CVPBUSD', 'STRAXBTC', 'STRAXETH', 'STRAXBUSD', 'STRAXUSDT', 'FORBTC', 'FORBUSD', 'UNFIBNB', 'UNFIBTC', 'UNFIBUSD', 'UNFIUSDT', 'FRONTETH', 'FRONTBUSD', 'BCHABUSD', 'ROSEBTC', 'ROSEBUSD', 'ROSEUSDT', 'AVAXTRY', 'BUSDBRL', 'AVAUSDT', 'SYSBUSD', 'XEMUSDT', 'HEGICETH', 'HEGICBUSD', 'AAVEUPUSDT', 'AAVEDOWNUSDT', 'PROMBNB', 'PROMBUSD', 'XRPBRL', 'XRPNGN', 'SKLBTC', 'SKLBUSD', 'SKLUSDT', 'BCHEUR', 'YFIEUR', 'ZILBIDR', 'SUSDBTC', 'SUSDETH', 'SUSDUSDT', 'COVERETH', 'COVERBUSD', 'GLMBTC', 'GLMETH', 'GHSTETH', 'GHSTBUSD', 'SUSHIUPUSDT', 'SUSHIDOWNUSDT', 'XLMUPUSDT', 'XLMDOWNUSDT', 'LINKBRL', 'LINKNGN', 'LTCRUB', 'TRXTRY', 'XLMEUR', 'DFETH', 'DFBUSD', 'GRTBTC', 'GRTETH', 'GRTUSDT', 'JUVBTC', 'JUVBUSD', 'JUVUSDT', 'PSGBTC', 'PSGBUSD', 'PSGUSDT', 'BUSDBVND', 'USDTBVND', '1INCHBTC', '1INCHUSDT', 'REEFBTC', 'REEFUSDT', 'OGBTC', 'OGUSDT', 'ATMBTC', 'ATMUSDT', 'ASRBTC', 'ASRUSDT', 'CELOBTC', 'CELOUSDT', 'RIFBTC', 'RIFUSDT', 'CHZTRY', 'XLMTRY', 'LINKGBP', 'GRTEUR', 'BTCSTBTC', 'BTCSTBUSD', 'BTCSTUSDT', 'TRUBTC', 'TRUBUSD', 'TRUUSDT', 'DEXEETH', 'DEXEBUSD', 'EOSEUR', 'LTCBRL', 'USDCBUSD', 'TUSDBUSD', 'PAXBUSD', 'CKBBTC', 'CKBBUSD', 'CKBUSDT', 'TWTBTC', 'TWTBUSD', 'TWTUSDT', 'FIROBTC', 'FIROETH', 'FIROUSDT', 'BETHETH', 'DOGEEUR', 'DOGETRY', 'DOGEAUD', 'DOGEBRL', 'DOTNGN', 'PROSETH', 'LITBTC', 'LITBUSD', 'LITUSDT', 'BTCVAI', 'BUSDVAI', 'SFPBTC', 'SFPBUSD', 'SFPUSDT', 'DOGEGBP', 'DOTTRY', 'FXSBTC', 'FXSBUSD', 'DODOBTC', 'DODOBUSD', 'DODOUSDT', 'FRONTBTC', 'EASYBTC', 'CAKEBTC', 'CAKEUSDT', 'BAKEBUSD', 'UFTETH', 'UFTBUSD', '1INCHBUSD', 'BANDBUSD', 'GRTBUSD', 'IOSTBUSD', 'OMGBUSD', 'REEFBUSD', 'ACMBTC', 'ACMBUSD', 'ACMUSDT', 'AUCTIONBTC', 'AUCTIONBUSD', 'PHABTC', 'PHABUSD', 'DOTGBP', 'ADATRY', 'ADABRL', 'ADAGBP', 'TVKBTC', 'TVKBUSD', 'BADGERBTC', 'BADGERBUSD', 'BADGERUSDT', 'FISBTC', 'FISBUSD', 'FISUSDT', 'DOTBRL', 'ADAAUD', 'HOTTRY', 'EGLDEUR', 'OMBTC', 'OMBUSD', 'OMUSDT', 'PONDBTC', 'PONDBUSD', 'PONDUSDT', 'DEGOBTC', 'DEGOBUSD', 'DEGOUSDT', 'AVAXEUR', 'BTTTRY', 'CHZBRL', 'UNIEUR', 'ALICEBTC', 'ALICEBUSD', 'ALICEUSDT', 'CHZBUSD', 'CHZEUR', 'CHZGBP', 'BIFIBNB', 'BIFIBUSD', 'LINABTC', 'LINABUSD', 'LINAUSDT', 'ADARUB', 'ENJBRL', 'ENJEUR', 'MATICEUR', 'NEOTRY', 'PERPBTC', 'PERPBUSD', 'PERPUSDT', 'RAMPBTC', 'RAMPBUSD', 'RAMPUSDT', 'SUPERBTC', 'SUPERBUSD', 'SUPERUSDT', 'CFXBTC', 'CFXBUSD', 'CFXUSDT', 'ENJGBP', 'EOSTRY', 'LTCGBP', 'LUNAEUR', 'RVNTRY', 'THETAEUR', 'XVGBUSD', 'EPSBTC', 'EPSBUSD', 'EPSUSDT', 'AUTOBTC', 'AUTOBUSD', 'AUTOUSDT', 'TKOBTC', 'TKOBIDR', 'TKOBUSD', 'TKOUSDT', 'PUNDIXETH', 'PUNDIXUSDT', 'BTTBRL', 'BTTEUR', 'HOTEUR', 'WINEUR', 'TLMBTC', 'TLMBUSD', 'TLMUSDT', '1INCHUPUSDT', '1INCHDOWNUSDT', 'BTGBUSD', 'BTGUSDT', 'HOTBUSD', 'BNBUAH', 'ONTTRY', 'VETEUR', 'VETGBP', 'WINBRL', 'MIRBTC', 'MIRBUSD', 'MIRUSDT', 'BARBTC', 'BARBUSD', 'BARUSDT', 'FORTHBTC', 'FORTHBUSD', 'FORTHUSDT', 'CAKEGBP', 'DOGERUB', 'HOTBRL', 'WRXEUR', 'EZBTC', 'EZETH', 'BAKEUSDT', 'BURGERBUSD', 'BURGERUSDT', 'SLPBUSD', 'SLPUSDT', 'TRXAUD', 'TRXEUR', 'VETTRY', 'SHIBUSDT', 'SHIBBUSD', 'ICPBTC', 'ICPBNB', 'ICPBUSD', 'ICPUSDT', 'SHIBEUR', 'SHIBRUB', 'ETCEUR', 'ETCBRL', 'DOGEBIDR', 'ARBTC', 'ARBNB', 'ARBUSD', 'ARUSDT', 'POLSBTC', 'POLSBNB', 'POLSBUSD', 'POLSUSDT', 'MDXBTC', 'MDXBNB', 'MDXBUSD', 'MDXUSDT', 'MASKBNB', 'MASKBUSD', 'MASKUSDT', 'LPTBTC', 'LPTBNB', 'LPTBUSD', 'LPTUSDT', 'ETHUAH', 'MATICBRL', 'SOLEUR', 'SHIBBRL', 'AGIXBTC', 'ICPEUR', 'MATICGBP', 'SHIBTRY', 'MATICBIDR', 'MATICRUB', 'NUBTC', 'NUBNB', 'NUBUSD', 'NUUSDT', 'XVGUSDT', 'RLCBUSD', 'CELRBUSD', 'ATMBUSD', 'ZENBUSD', 'FTMBUSD', 'THETABUSD', 'WINBUSD', 'KAVABUSD', 'XEMBUSD', 'ATABTC', 'ATABNB', 'ATABUSD', 'ATAUSDT', 'GTCBTC', 'GTCBNB', 'GTCBUSD', 'GTCUSDT', 'TORNBTC', 'TORNBNB', 'TORNBUSD', 'TORNUSDT', 'MATICTRY', 'ETCGBP', 'SOLGBP', 'BAKEBTC', 'COTIBUSD', 'KEEPBTC', 'KEEPBNB', 'KEEPBUSD', 'KEEPUSDT', 'SOLTRY', 'RUNEGBP', 'SOLBRL', 'SCBUSD', 'CHRBUSD', 'STMXBUSD', 'HNTBUSD', 'FTTBUSD', 'DOCKBUSD', 'ADABIDR', 'ERNBNB', 'ERNBUSD', 'ERNUSDT', 'KLAYBTC', 'KLAYBNB', 'KLAYBUSD', 'KLAYUSDT', 'RUNEEUR', 'MATICAUD', 'DOTRUB', 'UTKBUSD', 'IOTXBUSD', 'PHAUSDT', 'SOLRUB', 'RUNEAUD', 'BUSDUAH', 'BONDBTC', 'BONDBNB', 'BONDBUSD', 'BONDUSDT', 'MLNBTC', 'MLNBNB', 'MLNBUSD', 'MLNUSDT', 'GRTTRY', 'CAKEBRL', 'ICPRUB', 'DOTAUD', 'AAVEBRL', 'EOSAUD', 'DEXEUSDT', 'LTOBUSD', 'ADXBUSD', 'QUICKBTC', 'QUICKBNB', 'QUICKBUSD', 'C98USDT', 'C98BUSD', 'C98BNB', 'C98BTC', 'CLVBTC', 'CLVBNB', 'CLVBUSD', 'CLVUSDT', 'QNTBTC', 'QNTBNB', 'QNTBUSD', 'QNTUSDT', 'FLOWBTC', 'FLOWBNB', 'FLOWBUSD', 'FLOWUSDT', 'XECBUSD', 'AXSBRL', 'AXSAUD', 'TVKUSDT', 'MINABTC', 'MINABNB', 'MINABUSD', 'MINAUSDT', 'RAYBNB', 'RAYBUSD', 'RAYUSDT', 'FARMBTC', 'FARMBNB', 'FARMBUSD', 'FARMUSDT', 'ALPACABTC', 'ALPACABNB', 'ALPACABUSD', 'ALPACAUSDT', 'TLMTRY', 'QUICKUSDT', 'ORNBUSD', 'MBOXBTC', 'MBOXBNB', 'MBOXBUSD', 'MBOXUSDT', 'VGXBTC', 'VGXETH', 'FORUSDT', 'REQUSDT', 'GHSTUSDT', 'TRURUB', 'FISBRL', 'WAXPUSDT', 'WAXPBUSD', 'WAXPBNB', 'WAXPBTC', 'TRIBEBTC', 'TRIBEBNB', 'TRIBEBUSD', 'TRIBEUSDT', 'GNOUSDT', 'GNOBUSD', 'GNOBNB', 'GNOBTC', 'ARPATRY', 'PROMBTC', 'MTLBUSD', 'OGNBUSD', 'XECUSDT', 'C98BRL', 'SOLAUD', 'XRPBIDR', 'POLYBUSD', 'ELFUSDT', 'DYDXUSDT', 'DYDXBUSD', 'DYDXBNB', 'DYDXBTC', 'ELFBUSD', 'POLYUSDT', 'IDEXUSDT', 'VIDTUSDT', 'SOLBIDR', 'BTCUSDP', 'ETHUSDP', 'BNBUSDP', 'USDPBUSD', 'USDPUSDT', 'GALAUSDT', 'GALABUSD', 'GALABNB', 'GALABTC', 'FTMBIDR', 'ALGOBIDR', 'CAKEAUD', 'KSMAUD', 'WAVESRUB', 'SUNBUSD', 'ILVUSDT', 'ILVBUSD', 'ILVBNB', 'ILVBTC', 'RENBUSD', 'YGGUSDT', 'YGGBUSD', 'YGGBNB', 'YGGBTC', 'STXBUSD', 'SYSUSDT', 'DFUSDT', 'SOLUSDC', 'ARPARUB', 'LTCUAH', 'FETBUSD', 'ARPABUSD', 'LSKBUSD', 'AVAXBIDR', 'ALICEBIDR', 'FIDAUSDT', 'FIDABUSD', 'FIDABNB', 'FIDABTC', 'DENTBUSD', 'FRONTUSDT', 'CVPUSDT', 'AGLDBTC', 'AGLDBNB', 'AGLDBUSD', 'AGLDUSDT', 'RADBTC', 'RADBNB', 'RADBUSD', 'RADUSDT', 'UNIAUD', 'HIVEBUSD', 'STPTBUSD', 'BETABTC', 'BETABNB', 'BETABUSD', 'BETAUSDT', 'SHIBAUD', 'RAREBTC', 'RAREBNB', 'RAREBUSD', 'RAREUSDT', 'AVAXBRL', 'AVAXAUD', 'LUNAAUD', 'TROYBUSD', 'AXSETH', 'FTMETH', 'SOLETH', 'SSVBTC', 'SSVETH', 'LAZIOTRY', 'LAZIOEUR', 'LAZIOBTC', 'LAZIOUSDT', 'CHESSBTC', 'CHESSBNB', 'CHESSBUSD', 'CHESSUSDT', 'FTMAUD', 'FTMBRL', 'SCRTBUSD', 'ADXUSDT', 'AUCTIONUSDT', 'CELOBUSD', 'FTMRUB', 'NUAUD', 'NURUB', 'REEFTRY', 'REEFBIDR', 'SHIBDOGE', 'DARUSDT', 'DARBUSD', 'DARBNB', 'DARBTC', 'BNXBTC', 'BNXBNB', 'BNXBUSD', 'BNXUSDT', 'RGTUSDT', 'RGTBTC', 'RGTBUSD', 'RGTBNB', 'LAZIOBUSD', 'OXTBUSD', 'MANATRY', 'ALGORUB', 'SHIBUAH', 'LUNABIDR', 'AUDUSDC', 'MOVRBTC', 'MOVRBNB', 'MOVRBUSD', 'MOVRUSDT', 'CITYBTC', 'CITYBNB', 'CITYBUSD', 'CITYUSDT', 'ENSBTC', 'ENSBNB', 'ENSBUSD', 'ENSUSDT', 'SANDETH', 'DOTETH', 'MATICETH', 'ANKRBUSD', 'SANDTRY', 'MANABRL', 'KP3RUSDT', 'QIUSDT', 'QIBUSD', 'QIBNB', 'QIBTC', 'PORTOBTC', 'PORTOUSDT', 'PORTOTRY', 'PORTOEUR', 'POWRUSDT', 'POWRBUSD', 'AVAXETH', 'SLPTRY', 'FISTRY', 'LRCTRY', 'CHRETH', 'FISBIDR', 'VGXUSDT', 'GALAETH', 'JASMYUSDT', 'JASMYBUSD', 'JASMYBNB', 'JASMYBTC', 'AMPBTC', 'AMPBNB', 'AMPBUSD', 'AMPUSDT', 'PLABTC', 'PLABNB', 'PLABUSD', 'PLAUSDT', 'PYRBTC', 'PYRBUSD', 'PYRUSDT', 'RNDRBTC', 'RNDRUSDT', 'RNDRBUSD', 'ALCXBTC', 'ALCXBUSD', 'ALCXUSDT', 'SANTOSBTC', 'SANTOSUSDT', 'SANTOSBRL', 'SANTOSTRY', 'MCBTC', 'MCBUSD', 'MCUSDT', 'BELTRY', 'COCOSBUSD', 'DENTTRY', 'ENJTRY', 'NEORUB', 'SANDAUD', 'SLPBIDR', 'ANYBTC', 'ANYBUSD', 'ANYUSDT', 'BICOBTC', 'BICOBUSD', 'BICOUSDT', 'FLUXBTC', 'FLUXBUSD', 'FLUXUSDT', 'ALICETRY', 'FXSUSDT', 'GALABRL', 'GALATRY', 'LUNATRY', 'REQBUSD', 'SANDBRL', 'MANABIDR', 'SANDBIDR', 'VOXELBTC', 'VOXELBNB', 'VOXELBUSD', 'VOXELUSDT', 'COSBUSD', 'CTXCBUSD', 'FTMTRY', 'MANABNB', 'MINATRY', 'XTZTRY', 'HIGHBTC', 'HIGHBUSD', 'HIGHUSDT', 'CVXBTC', 'CVXBUSD', 'CVXUSDT', 'PEOPLEBTC', 'PEOPLEBUSD', 'PEOPLEUSDT', 'OOKIBUSD', 'OOKIUSDT', 'COCOSTRY', 'GXSBNB', 'LINKBNB', 'LUNAETH', 'MDTBUSD', 'NULSBUSD', 'SPELLBTC', 'SPELLUSDT', 'SPELLBUSD', 'USTBTC', 'USTBUSD', 'USTUSDT', 'JOEBTC', 'JOEBUSD', 'JOEUSDT', 'ATOMETH', 'DUSKBUSD', 'EGLDETH', 'ICPETH', 'LUNABRL', 'LUNAUST', 'NEARETH', 'ROSEBNB', 'VOXELETH', 'ALICEBNB', 'ATOMTRY', 'ETHUST', 'GALAAUD', 'LRCBNB', 'ONEETH', 'OOKIBNB', 'ACHBTC', 'ACHBUSD', 'ACHUSDT', 'IMXBTC', 'IMXBUSD', 'IMXUSDT', 'GLMRBTC', 'GLMRBUSD', 'GLMRUSDT', 'ATOMBIDR', 'DYDXETH', 'FARMETH', 'FORBNB', 'ICPTRY', 'JASMYETH', 'LINABNB', 'OOKIETH', 'ROSEETH', 'UMABUSD', 'UNIETH', 'XTZETH', 'LOKABTC', 'LOKABNB', 'LOKABUSD', 'LOKAUSDT', 'ATOMBRL', 'BNBUST', 'CRVETH', 'HIGHBNB', 'NEARRUB', 'ROSETRY', 'SCRTUSDT', 'API3BTC', 'API3BUSD', 'API3USDT', 'BTTCUSDT', 'BTTCUSDC', 'BTTCTRY', 'ACABTC', 'ACABUSD', 'ACAUSDT', 'ANCBTC', 'ANCBUSD', 'ANCUSDT', 'BDOTDOT', 'XNOBTC', 'XNOETH', 'XNOBUSD', 'XNOUSDT', 'COSTRY', 'KAVAETH', 'MCBNB', 'ONETRY', 'WOOBTC', 'WOOBNB', 'WOOBUSD', 'WOOUSDT', 'CELRETH', 'PEOPLEBNB', 'SLPBNB', 'SPELLBNB', 'SPELLTRY', 'TFUELBUSD', 'AXSTRY', 'DARTRY', 'NEARTRY', 'IDEXBNB', 'ALPINEEUR', 'ALPINETRY', 'ALPINEUSDT', 'ALPINEBTC', 'TUSDT', 'TBUSD', 'API3BNB', 'BETAETH', 'INJTRY', 'TLMBNB', 'ASTRBUSD', 'ASTRUSDT', 'API3TRY', 'GLMRBNB', 'MBOXTRY', 'GMTBTC', 'GMTBNB', 'GMTBUSD', 'GMTUSDT', 'ANCBNB', 'ATOMEUR', 'GALAEUR', 'KSMETH', 'UMATRY', 'KDABTC', 'KDABUSD', 'KDAUSDT', 'APEUSDT', 'APEBUSD', 'APEBTC', 'ALPINEBUSD', 'LUNAGBP', 'NEAREUR', 'TWTTRY', 'WAVESEUR', 'APEEUR', 'APEGBP', 'APETRY', 'BSWUSDT', 'BSWBUSD', 'BSWBNB', 'APEBNB', 'GMTBRL', 'GMTETH', 'JASMYTRY', 'SANTOSBUSD', 'APEAUD', 'BIFIUSDT', 'GMTEUR', 'IMXBNB', 'RUNEETH', 'AVAXGBP', 'MULTIBTC', 'MULTIBUSD', 'MULTIUSDT', 'APEETH', 'BSWETH', 'FILTRY', 'FTMEUR', 'GMTGBP', 'ZILTRY', 'GMTTRY', 'WAVESTRY', 'BTCUST', 'ASTRBTC', 'ASTRETH', 'BSWTRY', 'FTTETH', 'FUNBNB', 'PORTOBUSD', 'STEEMUSDT', 'ZILEUR', 'APEBRL', 'AUDIOTRY', 'BTTCBUSD', 'GMTAUD', 'MBLBUSD', 'MOBUSDT', 'MOBBUSD', 'MOBBTC', 'NEXOUSDT', 'NEXOBUSD', 'NEXOBTC', 'REIUSDT', 'REIBNB', 'REIETH', 'GALUSDT', 'GALBUSD', 'GALBNB', 'GALBTC', 'JASMYEUR', 'KNCBNB', 'SHIBGBP', 'GALEUR', 'GALTRY', 'LDOBUSD', 'LDOUSDT', 'LDOBTC', 'ENSTRY', 'DAREUR', 'DARETH', 'ALGOETH', 'ALGOTRY', 'GALETH', 'EPXUSDT', 'EPXBUSD', 'RUNETRY', 'GALBRL', 'STEEMBUSD', 'CVCBUSD', 'REIBUSD', 'DREPBUSD', 'AKROBUSD', 'PUNDIXBUSD', 'LUNCBUSD', 'USTCBUSD', 'OPBTC', 'OPBUSD', 'OPUSDT', 'OGBUSD', 'KEYBUSD', 'ASRBUSD', 'FIROBUSD', 'NKNBUSD', 'OPBNB', 'OPEUR', 'GTOBUSD', 'SNXETH', 'WBTCBUSD', 'BELETH', 'LITETH', 'LEVERUSDT', 'LEVERBUSD', 'BURGERETH', 'PEOPLEETH', 'UNFIETH', 'BONDETH', 'STORJTRY', 'OPETH', 'ETCTRY', 'WINGETH', 'FILETH', 'GLMBUSD', 'SSVBUSD', 'STGBTC', 'STGBUSD', 'STGUSDT', 'ANKRTRY', 'ARKBUSD', 'BETHBUSD', 'LOOMBUSD', 'SNMBUSD', 'AMBBUSD', 'LUNCUSDT', 'PHBBUSD', 'GASBUSD', 'NEBLBUSD', 'PROSBUSD', 'VIBBUSD', 'GMXBTC', 'GMXBUSD', 'GMXUSDT', 'AGIXBUSD', 'NEBLUSDT', 'SNTBUSD', 'POLYXBTC', 'POLYXBUSD', 'POLYXUSDT', 'APTBTC', 'APTUSDT', 'APTBUSD', 'BTCPLN', 'ETHPLN', 'BUSDPLN', 'APTEUR', 'APTTRY', 'APTBRL', 'QKCBUSD', 'OSMOBTC', 'OSMOUSDT', 'OSMOBUSD', 'HFTBTC', 'HFTBUSD', 'HFTUSDT', 'ARPAETH', 'PHBUSDT', 'VITEBUSD', 'HOOKBTC', 'HOOKUSDT', 'HOOKBUSD', 'HOOKBNB', 'MAGICBTC', 'MAGICBUSD', 'MAGICUSDT', 'BUSDRON', 'HIFIETH', 'HIFIUSDT', 'RPLBTC', 'RPLBUSD', 'RPLUSDT', 'PROSUSDT', 'FETTRY', 'GFTBUSD', 'AGIXUSDT', 'APTETH', 'BTCRON', 'GNSUSDT', 'GNSBTC', 'SYNBTC', 'SYNUSDT', 'VIBUSDT', 'SSVUSDT', 'LQTYUSDT', 'LQTYBTC', 'AMBUSDT', 'BETHUSDT', 'CFXTRY', 'STXTRY', 'USTCUSDT', 'GASUSDT', 'GLMUSDT', 'PROMUSDT', 'QKCUSDT', 'UFTUSDT', 'IDBTC', 'IDBNB', 'IDUSDT', 'ARBBTC', 'ARBUSDT', 'AGIXTRY', 'LOOMUSDT', 'OAXUSDT', 'ARBTUSD', 'ARBTRY', 'ARBEUR', 'IDTUSD', 'IDTRY', 'IDEUR', 'LDOTUSD', 'MATICTUSD', 'OPTUSD', 'SOLTUSD', 'SSVTUSD', 'RDNTBTC', 'RDNTUSDT', 'RDNTTUSD', 'ARBRUB', 'JOETRY', 'MAGICTRY', 'USDTPLN', 'ACHTRY', 'XVSTRY', 'EGLDRON', 'USDTRON', 'USDTARS', 'DOGETUSD', 'WBTCUSDT', 'EDUUSDT', 'EDUTUSD', 'EDUBNB', 'EDUBTC', 'EDUEUR', 'EDUTRY', 'SUIUSDT', 'SUITUSD', 'SUIBTC', 'SUIBNB', 'SUIEUR', 'SUITRY', 'AERGOUSDT', 'RNDRTRY', 'PEPEUSDT', 'PEPETUSD', 'FLOKIUSDT', 'FLOKITUSD', 'OGTRY', 'PEPETRY', 'WBETHETH', 'ASTUSDT', 'SNTUSDT', 'FLOKITRY', 'CITYTRY', 'COMBOUSDT', 'COMBOBNB', 'COMBOTRY', 'LTCTRY', 'RADTRY', 'BTCARS', 'OPTRY', 'PAXGTRY', 'MAVBTC', 'MAVUSDT', 'MAVTUSD', 'CFXTUSD', 'PENDLEBTC', 'PENDLEUSDT', 'PENDLETUSD', 'MAVTRY', 'OCEANTRY', 'TUSDTRY', 'ARBETH', 'BCHTRY', 'XVGTRY', 'XVGTUSD', 'ARKMUSDT', 'ARKMTUSD', 'ARKMTRY', 'ARKMBNB', 'ARKMBTC', 'WBETHUSDT', 'ACATRY', 'AVAXTUSD', 'COMPTUSD', 'COMPTRY', 'XECTRY', 'QUICKTUSD', 'WLDUSDT', 'WLDBTC', 'BNBFDUSD', 'FDUSDBUSD', 'FDUSDUSDT', 'ARKMRUB', 'WLDTRY', 'WLDRUB', 'AMPTRY', 'OGNTRY', 'BTCFDUSD', 'ETHFDUSD', 'ASRTRY', 'ATMTRY', 'ACMTRY', 'BARTRY', 'JUVTRY', 'PSGTRY', 'SEIBNB', 'SEIBTC', 'SEIFDUSD', 'SEITRY', 'SEIUSDT', 'CYBERBNB', 'CYBERBTC', 'CYBERFDUSD', 'CYBERTRY', 'CYBERUSDT', 'CYBERTUSD', 'SEITUSD', 'LPTTRY', 'UNITRY', 'SOLFDUSD', 'TOMOTRY', 'UNFITRY', 'XRPFDUSD', 'DOGEFDUSD', 'CYBERETH', 'MTLTRY', 'ARKUSDT', 'CREAMUSDT', 'GFTUSDT', 'IQUSDT', 'USDTVAI', 'ARBFDUSD', 'FDUSDTRY', 'FRONTTRY', 'SUIFDUSD', 'NTRNBTC', 'NTRNUSDT', 'NTRNBNB', 'FILFDUSD', 'FRONTTUSD', 'LEVERTRY', 'LTCFDUSD', 'ADAFDUSD', 'RUNETUSD', 'TRBTRY', 'ATOMFDUSD', 'AVAXFDUSD', 'BANDTRY', 'BCHFDUSD', 'LOOMTRY', 'MATICFDUSD', 'ALGOFDUSD', 'DOTFDUSD', 'FTMFDUSD', 'LINKFDUSD', 'NEARFDUSD', 'STRAXTRY', 'TIABTC', 'TIAUSDT', 'TIATRY', 'MEMEBNB', 'MEMEUSDT', 'MEMEFDUSD', 'MEMETUSD', 'MEMETRY', 'ORDIBTC', 'ORDIUSDT', 'ORDITRY', 'EGLDFDUSD', 'FETFDUSD', 'GASFDUSD', 'INJETH', 'INJTUSD', 'OPFDUSD', 'ORDIFDUSD', 'ORDITUSD', 'RNDRFDUSD', 'SHIBTUSD', 'BEAMXUSDT', 'ARKTRY', 'BEAMXTRY', 'CAKETRY', 'CAKETUSD', 'DYDXFDUSD', 'PIVXUSDT', 'RUNEFDUSD', 'TIATUSD', 'DOTTUSD', 'GALAFDUSD', 'WLDFDUSD', 'GASTRY', 'NTRNTRY', 'VICBTC', 'VICUSDT', 'VICTRY', 'BLURBTC', 'BLURUSDT', 'BLURTRY', 'BLURFDUSD', 'SUPERFDUSD', 'USTCFDUSD', 'USTCTRY', 'DYDXTRY', 'VANRYUSDT', 'VANRYBTC', 'BTCAEUR', 'AEURUSDT', 'ETHAEUR', 'EURAEUR', 'AUCTIONFDUSD', 'IOTAFDUSD', 'LUNCTRY', 'SUPERTRY', 'JTOUSDT', 'JTOFDUSD', 'JTOTRY', '1000SATSUSDT', '1000SATSFDUSD', '1000SATSTRY', 'SHIBFDUSD', 'SANDFDUSD', 'MEMEETH', 'IOTATRY', 'INJFDUSD', 'FIDATRY', 'BONKUSDT', 'BONKFDUSD', 'BONKTRY', 'ACEFDUSD', 'ACEUSDT', 'ACEBNB', 'ACEBTC', 'ACETRY', 'BLZFDUSD', 'RARETRY', 'VANRYTRY', 'NFPBTC', 'NFPUSDT', 'NFPBNB', 'NFPFDUSD', 'NFPTUSD', 'NFPTRY', 'ARBUSDC', 'AVAXUSDC', 'DOTUSDC', 'INJUSDC', 'MATICUSDC', 'OPUSDC', 'ORDIUSDC', 'AIBTC', 'AIUSDT', 'AIBNB', 'AIFDUSD', 'AITUSD', 'AITRY', 'ICPFDUSD', 'LDOFDUSD', 'MOVRTRY', 'XAIBTC', 'XAIUSDT', 'XAIBNB', 'XAIFDUSD', 'XAITUSD', 'XAITRY', 'SKLTRY', 'STXFDUSD', 'TIAFDUSD', 'MANTABTC', 'MANTAUSDT', 'MANTABNB', 'MANTAFDUSD', 'MANTATRY', 'ENSFDUSD', 'ETCFDUSD', 'SUIUSDC', 'TIAUSDC', 'CHZFDUSD', 'MANTAUSDC', 'ALTBTC', 'ALTUSDT', 'ALTBNB', 'ALTFDUSD', 'ALTTRY', 'APTFDUSD', 'BLURUSDC', 'JUPUSDT', 'JUPFDUSD', 'JUPTRY', 'ALTUSDC', 'MAGICFDUSD', 'SEIUSDC', 'PYTHBTC', 'PYTHUSDT', 'PYTHFDUSD', 'PYTHTRY', 'RONINBTC', 'RONINUSDT', 'RONINFDUSD', 'RONINTRY', 'DYMBTC', 'DYMUSDT', 'DYMFDUSD', 'DYMTRY', 'JUPUSDC', 'PENDLEFDUSD', 'PIXELBTC', 'PIXELBNB', 'PIXELUSDT', 'PIXELFDUSD', 'PIXELTRY', 'STRKBTC', 'STRKUSDT', 'STRKFDUSD', 'STRKTRY', 'FILUSDC', 'HBARTRY', 'PENDLETRY', 'WLDUSDC', 'CKBTRY', 'COTITRY', 'LDOTRY', 'UNIUSDC', 'PORTALBTC', 'PORTALUSDT', 'PORTALBNB', 'PORTALFDUSD', 'PORTALTRY', 'PDABTC', 'PDAUSDT', 'AXLBTC', 'AXLUSDT', 'AXLFDUSD', 'AXLTRY', 'PEPEFDUSD', 'PIXELUSDC', 'STRKUSDC', 'UNIFDUSD', 'OMTRY', 'THETATRY', 'WIFBTC', 'WIFUSDT', 'WIFFDUSD', 'WIFTRY', 'AGIXFDUSD', 'PEPEUSDC', 'SHIBUSDC', 'THETAFDUSD', 'ARTRY', 'METISBTC', 'METISUSDT', 'METISFDUSD', 'METISTRY', 'BNBJPY', 'BTCJPY', 'ETHJPY', 'FLOKIFDUSD', 'GRTFDUSD', 'NEARUSDC', 'SNXTRY', 'AEVOBTC', 'AEVOUSDT', 'AEVOBNB', 'AEVOFDUSD', 'AEVOTRY', 'FETUSDC', 'IMXTRY', 'EURUSDC', 'BOMETRY', 'BOMEBTC', 'BOMEUSDT', 'BOMEFDUSD', 'ETHFIBTC', 'ETHFIUSDT', 'ETHFIBNB', 'ETHFIFDUSD', 'ETHFITRY', 'AAVETRY', 'ARKMFDUSD', 'CRVTRY', 'FETBRL', 'RAYFDUSD', 'RNDREUR', 'BONKUSDC', 'FLOKIUSDC', 'MKRTRY', 'RAYTRY', 'RNDRBRL', 'ENABTC', 'ENAUSDT', 'ENABNB', 'ENAFDUSD', 'ENATRY', 'LQTYFDUSD', 'MASKTRY', 'PENDLEUSDC', 'RDNTTRY', 'WBTC', 'WUSDT', 'WFDUSD', 'WTRY', 'BOMEUSDC', 'JTOUSDC', 'WIFUSDC', 'TNSRBTC', 'TNSRUSDT', 'TNSRFDUSD', 'TNSRTRY', 'SAGABTC', 'SAGAUSDT', 'SAGABNB', 'SAGAFDUSD', 'SAGATRY', 'USDTMXN', 'CKBUSDC', 'ENAUSDC', 'ETHFIUSDC', 'YGGUSDC', 'USDTCZK', 'TAOBTC', 'TAOUSDT', 'TAOFDUSD', 'TAOTRY', 'CFXUSDC', 'RNDRUSDC', 'RUNEUSDC', 'SAGAUSDC', 'POLYXTRY', 'OMNIBTC', 'OMNIUSDT', 'OMNIBNB', 'OMNIFDUSD', 'OMNITRY', 'APTUSDC', 'GALAUSDC', 'OMNIBRL', 'STXUSDC', 'ICPUSDC', 'OMNIUSDC', 'PEPEBRL', 'YGGTRY', 'ADAJPY', 'SHIBJPY', 'SOLJPY', 'XRPJPY', 'REZBTC', 'REZUSDT', 'REZBNB', 'REZFDUSD', 'REZTRY', 'EGLDTRY', 'PHBTRY', 'RSRTRY', 'BBBTC', 'BBUSDT', 'BBBNB', 'BBFDUSD', 'BBTRY', 'FRONTUSDC', 'PEOPLETRY', 'TRBUSDC', 'NOTUSDT', 'NOTBNB', 'NOTFDUSD', 'NOTTRY', 'ARKMUSDC', 'ARUSDC', 'BBUSDC', 'CRVUSDC', 'PEOPLEUSDC', 'ARFDUSD', 'ENAEUR', 'PEPEEUR', 'REZUSDC', 'TRBFDUSD', 'USDCTRY', 'BTCMXN', 'XRPMXN', 'ENSUSDC', 'LDOUSDC', 'NOTUSDC', 'NEARBRL', 'HIGHTRY', 'PEOPLEFDUSD', 'TNSRUSDC', 'USDTCOP', 'IOBTC', 'IOUSDT', 'IOBNB', 'IOFDUSD', 'IOTRY', 'NOTBRL', 'TRUTRY', 'WIFEUR', 'ZKBTC', 'ZKUSDT', 'ZKFDUSD', 'ZKTRY', 'LISTAUSDT', 'LISTABNB', 'LISTAFDUSD', 'LISTATRY', 'ZROBTC', 'ZROUSDT', 'ZROFDUSD', 'ZROTRY', 'LISTABRL', 'BAKETRY', 'WIFBRL', 'ZKUSDC', 'ZROUSDC', 'IOUSDC', '1000SATSUSDC', 'BNXTRY', 'ETHARS', 'GUSDT', 'GTRY', 'BANANABTC', 'BANANAUSDT', 'BANANABNB', 'BANANAFDUSD', 'BANANATRY', 'RENDERBTC', 'RENDERUSDT', 'RENDERFDUSD', 'RENDERUSDC', 'RENDERTRY', 'RENDEREUR', 'RENDERBRL', 'TONBTC', 'TONUSDT', 'TONFDUSD', 'TONTRY', 'BONKBRL', 'NOTEUR', 'DOGEJPY', 'MATICJPY', 'NEARJPY', 'TONUSDC', 'AAVEFDUSD', 'DOGSUSDT', 'DOGSBNB', 'DOGSFDUSD', 'DOGSTRY', 'EUREURI', 'EURIUSDT', 'DOGSBRL', 'DOGSUSDC', 'RAREBRL', 'RAREUSDC', 'SLFBTC', 'SLFTRY', 'SLFUSDC', 'SLFUSDT', 'AAVEUSDC', 'SUNTRY', 'STMXTRY', 'POLBNB', 'POLBRL', 'POLBTC', 'POLETH', 'POLEUR', 'POLFDUSD', 'POLJPY', 'POLTRY', 'POLUSDC', 'POLUSDT', 'NEIROUSDT', 'TURBOUSDT', '1MBABYDOGEUSDT', 'CATIUSDT', 'CATIBNB', 'CATIFDUSD', 'CATITRY', '1MBABYDOGEFDUSD', '1MBABYDOGETRY', 'CATIBRL', 'BTCEURI', 'NEIROFDUSD', 'NEIROTRY', 'HMSTRUSDT', 'HMSTRBNB', 'HMSTRFDUSD', 'HMSTRTRY', 'EIGENBTC', 'EIGENUSDT', 'EIGENFDUSD', 'EIGENTRY', 'NEIROBRL', 'NEIROEUR', 'BNSOLSOL', 'SCRUSDT', 'SUIBRL', 'TURBOTRY', 'BNSOLUSDT', 'LUMIAUSDT', 'SCRBTC', 'SCRFDUSD', 'SCRTRY', 'KAIAUSDT', 'COWUSDT', 'CETUSUSDT', 'PNUTUSDT', 'ACTUSDT', 'ACTTRY', 'COWTRY', 'CETUSTRY', 'TROYTRY', 'PNUTTRY', 'ACTFDUSD', 'ACTUSDC', 'NEIROUSDC', 'PNUTBTC', 'PNUTFDUSD', 'PNUTUSDC', 'USUALUSDT', 'ACTBRL', 'ACTEUR', 'CATIUSDC', 'ETHEURI', 'LUMIATRY', 'PNUTBRL', 'PNUTEUR', 'APEFDUSD', 'FDUSDUSDC', 'HBARUSDC', 'OMUSDC', 'RAYUSDC', 'TAOUSDC', 'TURBOFDUSD', 'THEBTC', 'THEBNB', 'THEFDUSD', 'THETRY', 'THEUSDT', 'APEUSDC', 'BOMEEUR', 'EIGENUSDC', 'HBARFDUSD', 'MEMEUSDC', 'TROYUSDC', 'WLDEUR', '1MBABYDOGEUSDC', 'CETUSUSDC', 'COWUSDC', 'DYDXUSDC', 'HMSTRUSDC', 'TURBOUSDC', 'ENABRL', 'EOSFDUSD', 'KAIAUSDC', 'SANDUSDC', 'XLMFDUSD', 'CHZUSDC', 'PYTHUSDC', 'RSRUSDC', 'RSRFDUSD', 'WUSDC', 'XTZUSDC', 'ACXUSDT', 'ORCAUSDT', 'MOVEBTC', 'MOVEUSDT', 'MOVEBNB', 'MOVEFDUSD', 'MOVETRY', 'MEBTC', 'MEUSDT', 'MEFDUSD', 'METRY', 'ACXUSDC', 'ORCAUSDC', 'ACXFDUSD', 'ORCAFDUSD', 'ACXTRY', 'ORCATRY', 'KSMTRY', 'CELOTRY', 'HIVEFDUSD', 'HIVEUSDC', 'IDEXFDUSD', 'IDEXUSDC', 'TLMFDUSD', 'TLMUSDC', 'VELODROMEUSDT', 'VANAUSDT', 'VANABNB', 'VANAFDUSD', 'VANATRY', '1000CATUSDT', '1000CATBNB', '1000CATFDUSD', '1000CATTRY', 'PENGUUSDT', 'PENGUBNB', 'PENGUFDUSD', 'PENGUTRY', 'USUALBTC', 'USUALFDUSD', 'USUALTRY', '1000CATUSDC', 'PENGUUSDC', 'BIOUSDT', 'BIOBNB', 'BIOFDUSD', 'BIOTRY', 'BIOUSDC', 'HIVETRY', 'MOVEUSDC', 'PHATRY', 'SUSHITRY', 'DUSDT', 'DTRY', 'APTJPY', 'SUIJPY', 'XLMJPY', 'PEPEJPY', 'PHAUSDC', 'USDCPLN', 'STEEMUSDC', 'USUALUSDC', 'AIXBTUSDT', 'AIXBTUSDC', 'CGPTUSDT', 'CGPTUSDC', 'COOKIEUSDT', 'COOKIEUSDC', 'SBTC', 'SBNB', 'SETH', 'SEUR', 'SFDUSD', 'STRY', 'SUSDC', 'SUSDT', 'IOTXJPY', 'SEIJPY', 'SOLVUSDT', 'SOLVBNB', 'SOLVFDUSD', 'SOLVTRY', 'TRUMPUSDT', 'TRUMPUSDC', 'AIXBTTRY', 'TRUMPTRY', 'ANIMEUSDT', 'ANIMEUSDC', 'ANIMEBNB', 'ANIMEFDUSD', 'ANIMETRY', 'BERABTC', 'BERAUSDT', 'BERAUSDC', 'BERAFDUSD', 'BERABNB', 'BERATRY', '1000CHEEMSUSDT', '1000CHEEMSUSDC', 'TSTUSDT', 'TSTUSDC', 'LAYERBTC', 'LAYERUSDT', 'LAYERUSDC', 'LAYERBNB', 'LAYERFDUSD', 'LAYERTRY', 'QTUMTRY', 'TRUMPEUR', 'VTHOTRY', 'HEIBTC', 'HEIUSDT', 'CAKEUSDC', 'HEIUSDC', 'TRUMPFDUSD', 'TSTFDUSD', 'BNXUSDC', 'LTCJPY', 'BCHJPY', 'LINKJPY', 'KAITOBTC', 'KAITOUSDT', 'KAITOUSDC', 'KAITOBNB', 'KAITOFDUSD', 'KAITOTRY', 'ETHMXN', 'KAITOBRL', 'SOLMXN', 'BNBARS', 'SOLARS', 'TRUMPBRL', 'TRXFDUSD', 'TSTTRY', 'SHELLBTC', 'SHELLUSDT', 'SHELLUSDC', 'SHELLBNB', 'SHELLFDUSD', 'SHELLTRY', 'REDUSDT', 'GPSUSDT', 'GPSUSDC', 'GPSFDUSD', 'GPSTRY', 'GPSBNB', 'REDBTC', 'REDUSDC', 'REDFDUSD', 'REDTRY', 'CHESSUSDC', 'EGLDUSDC', 'OSMOUSDC', 'UTKUSDC', 'TUSDC', 'CVCUSDC', 'EURIUSDC', 'SYNUSDC', 'USDCRON', 'VELODROMEUSDC', 'EPICUSDT', 'DFUSDC', 'EPICUSDC', 'GMXUSDC', 'MKRUSDC', 'RPLUSDC', 'BMTUSDT', 'BMTUSDC', 'BMTBNB', 'BMTFDUSD', 'BMTTRY', 'FORMUSDC', 'FORMUSDT', 'FORMTRY', 'XUSDUSDT', 'IOTAUSDC', 'JUVUSDC', 'THEUSDC', 'VANRYUSDC', 'USDCCZK']

# SYMBOLS = [
#     'DOTUSDT', 'ADAUSDT', '1INCHUSDT', 'XRPUSDT', 'ARUSDT', 'MAVUSDT', 'MANAUSDT', 'INJUSDT',
#     'ONTUSDT', 'JTOUSDT', 'COMPUSDT', 'EGLDUSDT', 'HIFIUSDT', 'MASKUSDT', 'BATUSDT', 'XAIUSDT',
#     'HOOKUSDT', 'SUPERUSDT', 'UNIUSDT', 'STEEMUSDT', 'NKNUSDT', 'MAGICUSDT', 'GASUSDT', 'SXPUSDT',
#     'FETUSDT', 'DENTUSDT', 'ONEUSDT', 'ALICEUSDT', 'LSKUSDT', 'OXTUSDT', 'NFPUSDT', 'DYDXUSDT',
#     'RDNTUSDT', 'GMTUSDT', 'MINAUSDT', 'TRBUSDT', 'SUSHIUSDT', 'YGGUSDT', 'ACEUSDT', 'CHZUSDT',
#     'AVAXUSDT', 'GRTUSDT', 'MTLUSDT', 'LPTUSDT', 'TRUUSDT', 'TLMUSDT', 'CELRUSDT', 'KSMUSDT',
#     'DYMUSDT', 'SFPUSDT', 'BLURUSDT', 'QNTUSDT', 'CTSIUSDT', 'ETHUSDT', 'HOTUSDT', 'TRXUSDT',
#     'ICPUSDT', 'XTZUSDT', 'ALGOUSDT', 'VETUSDT', 'SPELLUSDT', 'ZRXUSDT', 'CHRUSDT', 'BALUSDT',
#     'ICXUSDT', 'ETCUSDT', 'FILUSDT', 'JASMYUSDT', 'FXSUSDT', 'CYBERUSDT', 'ALPHAUSDT', 'ILVUSDT',
#     'STXUSDT', 'CELOUSDT', 'AIUSDT', 'IDUSDT', 'SANDUSDT', 'ROSEUSDT', 'BTCUSDT',
#     'DOGEUSDT', 'SOLUSDT', 'STGUSDT', 'THETAUSDT', 'RIFUSDT', 'OPUSDT', 'CAKEUSDT', 'JOEUSDT',
#     'LQTYUSDT', 'TIAUSDT', 'KAITOUSDT', 'GALAUSDT', 'RONINUSDT', 'ACHUSDT', 'FUNUSDT',
#     'ONGUSDT', 'SEIUSDT', 'SKLUSDT', 'TUSDT', 'RVNUSDT'
# ]

# Global dictionary to track last trade advice per symbol

last_trade_advice = {}


# --- Async Utility Functions ---
async def async_get_tick_size(symbol: str, client: AsyncClient) -> float:
    try:
        exchange_info = await client.get_exchange_info()
        for s in exchange_info["symbols"]:
            if s["symbol"] == symbol:
                for f in s["filters"]:
                    if f["filterType"] == "PRICE_FILTER":
                        tick = float(f["tickSize"])
                        logger.info(f"[{symbol:<10}] Tick size: {tick}")
                        return tick
        logger.info(f"[{symbol:<10}] Tick size not found, using default 0.0001")
    except Exception as e:
        logger.error(f"[{symbol:<10}] Exception in async_get_tick_size: {e}")
    return 0.0001


async def async_auto_calculate_bin_size(symbol: str, price_min: float, price_max: float, client: AsyncClient,
                                        desired_bins: int = 50) -> float:
    try:
        price_range = price_max - price_min
        raw_bin_size = price_range / desired_bins
        tick_size = await async_get_tick_size(symbol, client)
        factor = math.ceil(raw_bin_size / tick_size)
        bin_size = factor * tick_size
        logger.info(
            f"[{symbol:<10}] Price range: {price_range}, Raw bin size: {raw_bin_size}, Calculated bin size: {bin_size}")
        return bin_size
    except Exception as e:
        logger.error(f"[{symbol:<10}] Exception in async_auto_calculate_bin_size: {e}")
        return 0.0


async def async_fetch_binance_data(symbol: str, client: AsyncClient, interval: str = DEFAULT_INTERVAL,
                                   start_time: datetime = None, end_time: datetime = None) -> pd.DataFrame:
    try:
        now = datetime.utcnow()
        if start_time is None:
            start_time = datetime.combine(now.date(), time(0, 0))
        if end_time is None:
            end_time = now
        start_str = start_time.strftime("%d %b %Y %H:%M:%S")
        end_str = end_time.strftime("%d %b %Y %H:%M:%S")
        logger.info(f"[{symbol:<10}] Fetching data from {start_str} to {end_str}")
        klines = await client.get_historical_klines(symbol, interval, start_str, end_str)
        if not klines:
            no_data_list.append(symbol)
            raise ValueError(f"No data returned for {symbol}")
        columns = ["OpenTime", "Open", "High", "Low", "Close", "Volume",
                   "CloseTime", "QuoteAssetVolume", "NumberOfTrades",
                   "TakerBuyBaseAssetVolume", "TakerBuyQuoteAssetVolume", "Ignore"]
        df = pd.DataFrame(klines, columns=columns)
        df["OpenTime"] = pd.to_datetime(df["OpenTime"], unit="ms")
        df["CloseTime"] = pd.to_datetime(df["CloseTime"], unit="ms")
        for col in ["Open", "High", "Low", "Close", "Volume"]:
            df[col] = pd.to_numeric(df[col], errors="coerce")
        logger.info(f"[{symbol:<10}] Fetched {len(df)} rows.")
        return df[["OpenTime", "Open", "High", "Low", "Close", "Volume"]]
    except Exception as e:
        logger.error(f"[{symbol:<10}] Exception in async_fetch_binance_data: {e}")
        return None


# --- Volume Profile Calculator (unchanged) ---
class VolumeProfileCalculator:
    def __init__(self, df: pd.DataFrame, bin_size: float, symbol: str):
        self.df = df
        self.bin_size = bin_size
        self.symbol = symbol
        self.profile = None

    def compute_profile(self):
        try:
            price_min = float(self.df["Low"].min())
            price_max = float(self.df["High"].max())
            bins = np.arange(price_min, price_max + self.bin_size, self.bin_size)
            bin_labels = (bins[:-1] + bins[1:]) / 2
            profile_df = pd.DataFrame({"Price": bin_labels, "Volume": 0.0})
            for _, row in self.df.iterrows():
                valid_bins = profile_df[
                    (profile_df["Price"] >= row["Low"]) & (profile_df["Price"] <= row["High"])].index
                if len(valid_bins) > 0:
                    distributed_volume = row["Volume"] / len(valid_bins)
                    profile_df.loc[valid_bins, "Volume"] += distributed_volume
            self.profile = profile_df
            logger.info(f"[{self.symbol:<10}] Volume profile computed.")
            return profile_df
        except Exception as e:
            logger.error(f"[{self.symbol:<10}] Exception in compute_profile: {e}")
            return None

    def calculate_poc(self):
        try:
            if self.profile is None:
                self.compute_profile()
            poc_row = self.profile.loc[self.profile["Volume"].idxmax()]
            logger.info(f"[{self.symbol:<10}] POC: {poc_row['Price']}")
            return poc_row["Price"]
        except Exception as e:
            logger.error(f"[{self.symbol:<10}] Exception in calculate_poc: {e}")
            return None

    def calculate_value_area(self, value_area_percent: float = 0.7):
        try:
            if self.profile is None:
                self.compute_profile()
            total_volume = self.profile["Volume"].sum()
            target_volume = total_volume * value_area_percent
            poc_index = self.profile["Volume"].idxmax()
            selected = {poc_index}
            cum_volume = self.profile.loc[poc_index, "Volume"]
            left = poc_index - 1
            right = poc_index + 1
            while cum_volume < target_volume:
                vol_left = self.profile.loc[left, "Volume"] if left >= 0 else 0
                vol_right = self.profile.loc[right, "Volume"] if right < len(self.profile) else 0
                if vol_left >= vol_right:
                    if left >= 0:
                        selected.add(left)
                        cum_volume += vol_left
                        left -= 1
                    elif right < len(self.profile):
                        selected.add(right)
                        cum_volume += vol_right
                        right += 1
                    else:
                        break
                else:
                    if right < len(self.profile):
                        selected.add(right)
                        cum_volume += vol_right
                        right += 1
                    elif left >= 0:
                        selected.add(left)
                        cum_volume += vol_left
                        left -= 1
                    else:
                        break
            selected_bins = self.profile.loc[list(selected)]
            value_area_high = selected_bins["Price"].max()
            value_area_low = selected_bins["Price"].min()
            logger.info(f"[{self.symbol:<10}] VAH: {value_area_high}, VAL: {value_area_low}")
            return value_area_high, value_area_low
        except Exception as e:
            logger.error(f"[{self.symbol:<10}] Exception in calculate_value_area: {e}")
            return None, None


# --- Telegram Message Sender ---
def send_telegram_message(message: str, token: str, chat_id: str):
    try:
        url = f"https://api.telegram.org/bot{token}/sendMessage"
        payload = {"chat_id": chat_id, "text": message, "parse_mode": "Markdown"}
        r = requests.post(url, data=payload)
        if r.status_code == 200:
            logger.info("Telegram message sent successfully.")
        else:
            logger.error("Failed to send Telegram message. Status code: %s", r.status_code)
    except Exception as e:
        logger.error("Exception while sending Telegram message: %s", e)


# --- Asynchronous Scanner Function for a Single Symbol ---
async def async_scan_symbol(symbol: str, client: AsyncClient, interval: str = DEFAULT_INTERVAL) -> dict:
    try:
        logger.info(f"[{symbol:<10}] Starting scan...")
        data = await async_fetch_binance_data(symbol, client, interval)
        if data is None:
            logger.info(f"[{symbol:<10}] No data returned.")
            return None

        try:
            ticker = await client.get_symbol_ticker(symbol=symbol)
            current_price = float(ticker["price"])
        except Exception as e:
            logger.error(f"[{symbol:<10}] Exception getting ticker: {e}")
            return None

        price_min = float(data["Low"].min())
        price_max = float(data["High"].max())
        bin_size = await async_auto_calculate_bin_size(symbol, price_min, price_max, client, desired_bins=50)
        vp_calculator = VolumeProfileCalculator(data, bin_size=bin_size, symbol=symbol)
        vp_calculator.compute_profile()
        poc = vp_calculator.calculate_poc()
        vah, val = vp_calculator.calculate_value_area(value_area_percent=0.7)
        if None in (poc, vah, val):
            logger.info(f"[{symbol:<10}] Incomplete volume profile data.")
            return None

        poc_pct = ((poc - val) / (vah - val)) * 100 if (vah - val) != 0 else 0.0

        # Round values to 4 decimals.
        current_price_r = round(current_price, 4)
        poc_r = round(poc, 4)
        vah_r = round(vah, 4)
        val_r = round(val, 4)
        poc_pct_r = round(poc_pct, 4)

        # --- Trade Advice Logic ---
        trade_advice = "WAIT"
        if poc_pct < 30:
            if current_price >= val and current_price <= poc:
                trade_advice = "BUY"
            elif current_price < val and current_price <= poc:
                trade_advice = "LIKELY BUY"
        elif poc_pct > 70:
            if current_price >= poc and current_price <= vah:
                trade_advice = "SELL"
            elif current_price >= poc and current_price > vah:
                trade_advice = "LIKELY SELL"

        result = {
            "symbol": symbol,
            "current_price": current_price_r,
            "POC": poc_r,
            "VAH": vah_r,
            "VAL": val_r,
            "POC_pct": poc_pct_r,
            "trade_advice": trade_advice,
        }
        logger.info(f"[{symbol:<10}] Scan result: {result}")
        return result
    except Exception as e:
        logger.error(f"[{symbol:<10}] Exception in async_scan_symbol: {e}")
        return None


# --- Asynchronous Main Scanner Loop with Batching ---
async def async_main():
    global last_trade_advice
    for sym in SYMBOLS:
        last_trade_advice[sym] = None

    client = await AsyncClient.create()
    BATCH_SIZE = 3  # Process 5 symbols per batch
    try:
        while True:
            summary = []
            for i in range(0, len(SYMBOLS), BATCH_SIZE):
                batch = SYMBOLS[i:i + BATCH_SIZE]
                tasks = [async_scan_symbol(sym, client, DEFAULT_INTERVAL) for sym in batch]
                results = await asyncio.gather(*tasks, return_exceptions=True)
                for res in results:
                    if isinstance(res, Exception):
                        logger.error("Error in one of the tasks: %s", res)
                    elif res:
                        summary.append(res)
                        symbol = res["symbol"]
                        advice = res["trade_advice"]
                        # --- Calculate Stop Loss using RR 1:2 ---
                        if advice != "WAIT" and advice != last_trade_advice[symbol]:
                            tick = await async_get_tick_size(symbol, client)
                            entry = res["current_price"]
                            if advice in ["BUY", "LIKELY BUY"]:
                                TP = res["VAH"]
                                risk = ((TP - entry) / tick) / 2 * tick
                                SL = entry - risk
                            elif advice in ["SELL", "LIKELY SELL"]:
                                TP = res["VAL"]
                                risk = ((entry - TP) / tick) / 2 * tick
                                SL = entry + risk
                            else:
                                TP = SL = 0.0
                            SL = round(SL, 4)
                            TP = round(TP, 4)
                            message = (
                                "*Trade Alert!*\n\n"
                                f"*Symbol:* _{symbol}.P_\n"
                                f"*Trade Advice:* _{advice}_\n"
                                f"*ENTRY:* _{entry}_\n"
                                f"*SL:* _{SL}_\n"
                                f"*TP:* _{TP}_\n\n"
                                "*DATA DETAILS*\n"
                                f"*POC:* _{res['POC']}_\n"
                                f"*VAH:* _{res['VAH']}_\n"
                                f"*VAL:* _{res['VAL']}_\n"
                                f"*POC %:* _{res['POC_pct']}%_\n\n"
                                f"-----------------------\n"
                                f"{res['POC']}, {res['VAH']},{res['VAL']}, {entry}, {SL},{TP}\n"
                                f"-----------------------"
                            )
                            if res['POC_pct'] > 0 and str(advice).__contains__("LIKELY") is False:
                                send_telegram_message(message, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID)
                                last_trade_advice[symbol] = advice
            logger.info("\n--- Scanner Summary (%s) ---", datetime.utcnow().strftime("%d %b %Y %H:%M:%S UTC"))
            for res in summary:
                if res['trade_advice'] != "WAIT":
                    logger.info(
                        f"{res['symbol']:<10}: Current Price: {res['current_price']}, POC: {res['POC']}, "
                        f"VAH: {res['VAH']}, VAL: {res['VAL']}, POC %: {res['POC_pct']}%, "
                        f"Trade Advice: {res['trade_advice']}"
                    )

            async def wait(seconds=60):
                start = seconds
                while start > 0:
                    print(f"\rCooling {start}s...", end="")
                    await asyncio.sleep(1)  # Non-blocking sleep
                    start -= 1
                logger.info("Cooling complete!")

            print("NO DATA List:")
            print(no_data_list)
            await wait(60)
    finally:
        await client.close_connection()


if __name__ == '__main__':
    asyncio.run(async_main())
